package com.xiaozi.designpatterntestdemo.principle;

/**
 * @author : Sun
 * @version : 1.0
 * create time : 2019/10/15 12:52
 * desc :单一职责原则(SRP)——面向对象设计原则
 *
 * 1.单一职责原则的定义
 * 单一职责原则又称单一功能原则，由罗伯特·C.马丁（Robert C. Martin）提出.这里的职责是指类变化的原因，单
 * 一职责原则规定一个类应该有且仅有一个引起它变化的原因，否则类应该被拆分（There should never be more
 * than one reason for a class to change）。
 * 该原则提出对象不应该承担太多职责，如果一个对象承担了太多的职责，至少存在以下两个缺点：
 * 1).一个职责的变化可能会削弱或者抑制这个类实现其他职责的能力；
 * 2).当客户端需要该对象的某一个职责时，不得不将其他不需要的职责全都包含进来，从而造成冗余代码或代码的浪费。
 *
 * 2.单一职责原则的优点
 * 单一职责原则的核心就是控制类的粒度大小、将对象解耦、提高其内聚性。如果遵循单一职责原则将有以下优点:
 * 1).降低类的复杂度。一个类只负责一项职责，其逻辑肯定要比负责多项职责简单得多。
 * 2).提高类的可读性。复杂性降低，自然其可读性会提高。
 * 3).提高系统的可维护性。可读性提高，那自然更容易维护了。
 * 4).变更引起的风险降低。变更是必然的，如果单一职责原则遵守得好，当修改一个功能时，可以显著降低对其他功能的影响。
 *
 * 3.单一职责原则的实现方法
 * 单一职责原则是最简单但又最难运用的原则，需要设计人员发现类的不同职责并将其分离，再封装到不同的类或模块
 * 中。而发现类的多重职责需要设计人员具有较强的分析设计能力和相关重构经验。
 *
 * 【例1】单一职责原则在“大学学生工作管理程序”中的应用。
 * 分析：大学学生工作主要包括学生生活辅导和学生学业指导两个方面的工作，其中生活辅导主要包括班委建设、出勤
 * 统计、心理辅导、费用催缴、班级管理等工作，学业指导主要包括专业引导、学习辅导、科研指导、学习总结等工作。
 * 如果将这些工作交给一位老师负责显然不合理，正确的做法是生活辅导由辅导员负责，学业指导由学业导师负责。
 *
 * 注意：单一职责同样也适用于方法。一个方法应该尽可能做好一件事情。如果一个方法处理的事情太多，其颗粒度会
 * 变得很粗，不利于重用。
 *
 *
 */
public class SingleResponsibilityPrinciple {
}
